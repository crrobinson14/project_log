<?php

/**
 * @file
 * Project Log tracking module.
 */

/**
 * Implements hook_views_api().
 */
function project_log_views_api() {
  $path = drupal_get_path('module', 'project_log');
  return array(
    'api' => 3,
    'path' => $path . '/views',
    'template path' => $path . '/views',
  );
}

/**
 * Obtain the 'root' project log node for any given project-log-related
 * item, such as a task, section, or work entry. This makes it easier
 * to build menu paths and so on.
 *
 * @param $node A NID or node source to evaluate. If omitted, the current
 * page will be evaluated.
 *
 * @return integer The NID of the project log this node is associated with, or NULL.
 */
function project_log_root_nid($node = NULL) {
  if (!is_object($node) && is_integer($node))
    $node = node_load($node);
    
  if (!is_object($node))
    $node = menu_get_object('node');
  
  if (!is_object($node))
    return NULL;
  
  switch ($node->type) {
    // If we're already on a Project Log, we're done
    case 'project_log':
      return $node->nid;

    // For Project Log sections, we need to follow the back-reference
    // from our parent.
    case 'project_log_section':
      return db_query_range("SELECT entity_id FROM {field_data_project_log_sections}
                             WHERE project_log_sections_nid=:nid", 0, 1,
                             array(':nid' => $node->nid))->fetchField();

    // For Project Log tasks, we need to follow the back-reference
    // to our section, and then THAT back-reference to the project log.
    case 'project_log_task':
      $section = db_query_range("SELECT entity_id FROM {field_data_project_log_tasks}
                                 WHERE project_log_tasks_nid=:nid", 0, 1,
                                 array(':nid' => $node->nid))->fetchField();

      return db_query_range("SELECT entity_id FROM {field_data_project_log_sections}
                             WHERE project_log_sections_nid=:nid", 0, 1,
                             array(':nid' => $section))->fetchField();

    // For Project Log work entries, we have that one last step to follow.
    case 'project_log_work':
      $task = $node->field_project_log_work_task[$node->language][0]['nid'];
      
      $section = db_query_range("SELECT entity_id FROM {field_data_project_log_tasks}
                                 WHERE project_log_tasks_nid=:nid", 0, 1,
                                 array(':nid' => $task))->fetchField();

      return db_query_range("SELECT entity_id FROM {field_data_project_log_sections}
                             WHERE project_log_sections_nid=:nid", 0, 1,
                             array(':nid' => $section))->fetchField();
  }

  return NULL;
}